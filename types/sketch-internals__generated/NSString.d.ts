interface NSStringUninitialized<InitializedType = NSString> extends NSObjectUninitialized<NSString> {
  initWithCoder(aDecoder: NSCoder): InitializedType;
  initWithCharactersNoCopy_length_freeWhenDone(characters: unichar, length: NSUInteger, freeBuffer: boolean): InitializedType;
  initWithCharacters_length(characters: unichar, length: NSUInteger): InitializedType;
  initWithUTF8String(nullTerminatedCString: string): InitializedType;
  initWithString(aString: NSString | string): InitializedType;
  initWithFormat(format: NSString | string, ...args: any[]): InitializedType;
  initWithFormat_arguments(format: NSString | string, ...argList: any[]): InitializedType;
  initWithFormat_locale(format: NSString | string, locale: any | null, ...args: any[]): InitializedType;
  initWithFormat_locale_arguments(format: NSString | string, locale: any | null, ...argList: any[]): InitializedType;
  initWithData_encoding(data: NSData, encoding: NSStringEncoding): InitializedType;
  initWithBytes_length_encoding(bytes: void, len: NSUInteger, encoding: NSStringEncoding): InitializedType;
  initWithBytesNoCopy_length_encoding_freeWhenDone(bytes: void, len: NSUInteger, encoding: NSStringEncoding, freeBuffer: boolean): InitializedType;
  initWithCString_encoding(nullTerminatedCString: string, encoding: NSStringEncoding): InitializedType;
  initWithContentsOfURL_encoding_error(url: NSURL, enc: NSStringEncoding, error: MOPointer<NSError>): InitializedType;
  initWithContentsOfFile_encoding_error(path: NSString | string, enc: NSStringEncoding, error: MOPointer<NSError>): InitializedType;
  initWithContentsOfURL_usedEncoding_error(url: NSURL, enc: NSStringEncoding | null, error: MOPointer<NSError>): InitializedType;
  initWithContentsOfFile_usedEncoding_error(path: NSString | string, enc: NSStringEncoding | null, error: MOPointer<NSError>): InitializedType;
  initWithContentsOfFile(path: NSString | string): InitializedType;
  initWithContentsOfURL(url: NSURL): InitializedType;
  initWithCStringNoCopy_length_freeWhenDone(bytes: string, length: NSUInteger, freeBuffer: boolean): InitializedType;
  initWithCString_length(bytes: string, length: NSUInteger): InitializedType;
  initWithCString(bytes: string): InitializedType;
}

interface NSString extends NSObject, INSCopying, INSMutableCopying, INSSecureCoding {
  variantFittingPresentationWidth(width: NSInteger): NSString;
  linguisticTagsInRange_scheme_options_orthography_tokenRanges(range: NSRange, scheme: NSLinguisticTagScheme, options: NSLinguisticTaggerOptions, orthography: NSOrthography | null, tokenRanges: NSArray<any> | any[]): NSArray<any>;
  enumerateLinguisticTagsInRange_scheme_options_orthography_usingBlock(range: NSRange, scheme: NSLinguisticTagScheme, options: NSLinguisticTaggerOptions, orthography: NSOrthography | null, block: Block): void;
  stringByAppendingPathComponent(str: NSString | string): NSString;
  stringByAppendingPathExtension(str: NSString | string): NSString;
  stringsByAppendingPaths(paths: NSArray<any> | any[]): NSArray<any>;
  completePathIntoString_caseSensitive_matchesIntoArray_filterTypes(outputName: NSString | string, flag: boolean, outputArray: NSArray<any> | any[], filterTypes: NSArray<any> | any[] | null): NSUInteger;
  getFileSystemRepresentation_maxLength(cname: string, max: NSUInteger): boolean;
  characterAtIndex(index: NSUInteger): unichar;
  substringFromIndex(from: NSUInteger): NSString;
  substringToIndex(to: NSUInteger): NSString;
  substringWithRange(range: NSRange): NSString;
  getCharacters_range(buffer: unichar, range: NSRange): void;
  compare(string: NSString | string): NSComparisonResult;
  compare_options(string: NSString | string, mask: NSStringCompareOptions): NSComparisonResult;
  compare_options_range(string: NSString | string, mask: NSStringCompareOptions, rangeOfReceiverToCompare: NSRange): NSComparisonResult;
  compare_options_range_locale(string: NSString | string, mask: NSStringCompareOptions, rangeOfReceiverToCompare: NSRange, locale: any | null): NSComparisonResult;
  caseInsensitiveCompare(string: NSString | string): NSComparisonResult;
  localizedCompare(string: NSString | string): NSComparisonResult;
  localizedCaseInsensitiveCompare(string: NSString | string): NSComparisonResult;
  localizedStandardCompare(string: NSString | string): NSComparisonResult;
  isEqualToString(aString: NSString | string): boolean;
  hasPrefix(str: NSString | string): boolean;
  hasSuffix(str: NSString | string): boolean;
  commonPrefixWithString_options(str: NSString | string, mask: NSStringCompareOptions): NSString;
  containsString(str: NSString | string): boolean;
  localizedCaseInsensitiveContainsString(str: NSString | string): boolean;
  localizedStandardContainsString(str: NSString | string): boolean;
  localizedStandardRangeOfString(str: NSString | string): NSRange;
  rangeOfString(searchString: NSString | string): NSRange;
  rangeOfString_options(searchString: NSString | string, mask: NSStringCompareOptions): NSRange;
  rangeOfString_options_range(searchString: NSString | string, mask: NSStringCompareOptions, rangeOfReceiverToSearch: NSRange): NSRange;
  rangeOfString_options_range_locale(searchString: NSString | string, mask: NSStringCompareOptions, rangeOfReceiverToSearch: NSRange, locale: NSLocale | null): NSRange;
  rangeOfCharacterFromSet(searchSet: NSCharacterSet): NSRange;
  rangeOfCharacterFromSet_options(searchSet: NSCharacterSet, mask: NSStringCompareOptions): NSRange;
  rangeOfCharacterFromSet_options_range(searchSet: NSCharacterSet, mask: NSStringCompareOptions, rangeOfReceiverToSearch: NSRange): NSRange;
  rangeOfComposedCharacterSequenceAtIndex(index: NSUInteger): NSRange;
  rangeOfComposedCharacterSequencesForRange(range: NSRange): NSRange;
  stringByAppendingString(aString: NSString | string): NSString;
  stringByAppendingFormat(format: NSString | string, ...args: any[]): NSString;
  uppercaseStringWithLocale(locale: NSLocale | null): NSString;
  lowercaseStringWithLocale(locale: NSLocale | null): NSString;
  capitalizedStringWithLocale(locale: NSLocale | null): NSString;
  getLineStart_end_contentsEnd_forRange(startPtr: NSUInteger | null, lineEndPtr: NSUInteger | null, contentsEndPtr: NSUInteger | null, range: NSRange): void;
  lineRangeForRange(range: NSRange): NSRange;
  getParagraphStart_end_contentsEnd_forRange(startPtr: NSUInteger | null, parEndPtr: NSUInteger | null, contentsEndPtr: NSUInteger | null, range: NSRange): void;
  paragraphRangeForRange(range: NSRange): NSRange;
  enumerateSubstringsInRange_options_usingBlock(range: NSRange, opts: NSStringEnumerationOptions, block: Block): void;
  enumerateLinesUsingBlock(block: Block): void;
  dataUsingEncoding_allowLossyConversion(encoding: NSStringEncoding, lossy: boolean): NSData;
  dataUsingEncoding(encoding: NSStringEncoding): NSData;
  canBeConvertedToEncoding(encoding: NSStringEncoding): boolean;
  cStringUsingEncoding(encoding: NSStringEncoding): string;
  getCString_maxLength_encoding(buffer: string, maxBufferCount: NSUInteger, encoding: NSStringEncoding): boolean;
  getBytes_maxLength_usedLength_encoding_options_range_remainingRange(buffer: void | null, maxBufferCount: NSUInteger, usedBufferCount: NSUInteger | null, encoding: NSStringEncoding, options: NSStringEncodingConversionOptions, range: NSRange, leftover: NSRangePointer | null): boolean;
  maximumLengthOfBytesUsingEncoding(enc: NSStringEncoding): NSUInteger;
  lengthOfBytesUsingEncoding(enc: NSStringEncoding): NSUInteger;
  componentsSeparatedByString(separator: NSString | string): NSArray<any>;
  componentsSeparatedByCharactersInSet(separator: NSCharacterSet): NSArray<any>;
  stringByTrimmingCharactersInSet(set: NSCharacterSet): NSString;
  stringByPaddingToLength_withString_startingAtIndex(newLength: NSUInteger, padString: NSString | string, padIndex: NSUInteger): NSString;
  stringByFoldingWithOptions_locale(options: NSStringCompareOptions, locale: NSLocale | null): NSString;
  stringByReplacingOccurrencesOfString_withString_options_range(target: NSString | string, replacement: NSString | string, options: NSStringCompareOptions, searchRange: NSRange): NSString;
  stringByReplacingOccurrencesOfString_withString(target: NSString | string, replacement: NSString | string): NSString;
  stringByReplacingCharactersInRange_withString(range: NSRange, replacement: NSString | string): NSString;
  stringByApplyingTransform_reverse(transform: NSStringTransform, reverse: boolean): NSString;
  writeToURL_atomically_encoding_error(url: NSURL, useAuxiliaryFile: boolean, enc: NSStringEncoding, error: MOPointer<NSError>): boolean;
  writeToFile_atomically_encoding_error(path: NSString | string, useAuxiliaryFile: boolean, enc: NSStringEncoding, error: MOPointer<NSError>): boolean;
  propertyList(): any;
  propertyListFromStringsFileFormat(): NSDictionary<any, any>;
  cString(): string;
  lossyCString(): string;
  cStringLength(): NSUInteger;
  getCString(bytes: string): void;
  getCString_maxLength(bytes: string, maxLength: NSUInteger): void;
  getCString_maxLength_range_remainingRange(bytes: string, maxLength: NSUInteger, aRange: NSRange, leftoverRange: NSRangePointer | null): void;
  writeToFile_atomically(path: NSString | string, useAuxiliaryFile: boolean): boolean;
  writeToURL_atomically(url: NSURL, atomically: boolean): boolean;
  getCharacters(buffer: unichar): void;
  stringByAddingPercentEncodingWithAllowedCharacters(allowedCharacters: NSCharacterSet): NSString;
  stringByAddingPercentEscapesUsingEncoding(enc: NSStringEncoding): NSString;
  stringByReplacingPercentEscapesUsingEncoding(enc: NSStringEncoding): NSString;
  sizeWithAttributes(attrs: NSDictionary<any, any> | {[key: string]: any} | null): NSSize;
  drawAtPoint_withAttributes(point: NSPoint, attrs: NSDictionary<any, any> | {[key: string]: any} | null): void;
  drawInRect_withAttributes(rect: NSRect, attrs: NSDictionary<any, any> | {[key: string]: any} | null): void;
  drawWithRect_options_attributes_context(rect: NSRect, options: NSStringDrawingOptions, attributes: NSDictionary<any, any> | {[key: string]: any} | null, context: NSStringDrawingContext | null): void;
  boundingRectWithSize_options_attributes_context(size: NSSize, options: NSStringDrawingOptions, attributes: NSDictionary<any, any> | {[key: string]: any} | null, context: NSStringDrawingContext | null): NSRect;
  drawWithRect_options_attributes(rect: NSRect, options: NSStringDrawingOptions, attributes: NSDictionary<any, any> | {[key: string]: any} | null): void;
  boundingRectWithSize_options_attributes(size: NSSize, options: NSStringDrawingOptions, attributes: NSDictionary<any, any> | {[key: string]: any} | null): NSRect;
  stringByDeletingPrefix(prefix: NSString | string): NSString;
  stringByDeletingSuffix(suffix: NSString | string): NSString;
  stringByStrippingStrings(strings: NSArray<any> | any[]): NSString;
  stringByAppendingPathComponents(components: NSArray<any> | any[]): NSString;
  startsWith(str: NSString | string): boolean;
  endsWith(str: NSString | string): boolean;
  endsWith_options(str: NSString | string, options: NSStringCompareOptions): boolean;
  containsSubstring(sub: NSString | string): boolean;
  containsCharacter(c: unichar): boolean;
  stringWithFirstCharacterLowercase(): NSString;
  trimmedString(): NSString;
  splitByBaseAndNumber(): NSDictionary<any, any>;
  uniqueStringComparedToStrings_includeCopySuffix(strings: NSSet<any>, shouldAppendCopySuffix: boolean): NSString;
  words(): NSArray<any>;
  safeSubstringToIndex_ms(index: NSUInteger): NSString;
  safeSubstringFromIndex_ms(index: NSUInteger): NSString;
  safeSubstringWithRange_ms(range: NSRange): NSString;
  parent(): NSString;
  child(childName: NSString | string): NSString;
  extension(): NSString;
  withoutExtension(): NSString;
  withExtension(extension: NSString | string): NSString;
  expandTilde(): NSString;
  hasExtension(extension: NSString | string): boolean;
  isValidEmailAddress(): boolean;
  stringBySplittingMixedCaps(): NSString;
  componentsSeparatedByMixedCaps(): NSArray<any>;
  lastLines(count: NSUInteger): NSString;
  firstLines(count: NSUInteger): NSString;
  matchesString_divergingAfter_atIndex_divergentChar_expectedChar(string: NSString | string | null, prefix: NSString | string, index: NSUInteger, divergentChar: string, expectedChar: string): boolean;
  matchesString_divergingAtLine_after_diverged_expected(string: NSString | string | null, divergingLine: NSUInteger, after: NSString | string, diverged: NSString | string, expected: NSString | string): boolean;
  matchesString_divergingAtLine1_andLine2_diverged_expected(string: NSString | string | null, line1: NSUInteger, line2: NSUInteger, diverged: NSString | string, expected: NSString | string): boolean;
  matchesString_divergingAtLine1_andLine2_diverged_expected_window(string: NSString | string | null, line1: NSUInteger, line2: NSUInteger, diverged: NSString | string, expected: NSString | string, window: NSInteger): boolean;
  drawAtPoint_withFont(aPoint: NSPoint, font: NSFont): void;
  drawCenteredAtPoint_withFont_color(aPoint: NSPoint, font: NSFont, color: NSColor): void;
  sizeWithFont(aFont: NSFont): NSSize;
  heightWithFont_maxWidth(myFont: NSFont, myWidth: CGFloat): CGFloat;
  fontSizeToFitStringWithAttributes_inSize_maximumFontSize(attributes: CHStringAttributes, aSize: NSSize, maxSize: NSInteger): NSInteger;
  fontSizeToFitStringWithAttributes_inSize(attributes: CHStringAttributes, aSize: NSSize): NSInteger;
  fontSizeToFitStringWithAttributes_inWidth(attributes: CHStringAttributes, width: NSInteger): NSInteger;
  fontSizeToFitStringWithAttributes_inHeight(attributes: CHStringAttributes, height: NSInteger): NSInteger;
  fitStringAttributes_inSize(attributes: CHStringAttributes, aSize: NSSize): void;
  fitStringAttributes_inWidth(attributes: CHStringAttributes, width: NSInteger): void;
  fitStringAttributes_inHeight(attributes: CHStringAttributes, height: NSInteger): void;
  colorValue(): NSColor;
  sRGBColorFromHexColor(): NSColor;
  enumerateNonWhitespaceRanges(block: CHStringWordEnumeratorBlock): void;
  nonWhitespaceRanges(): NSArray<any>;
  numberValueInContextOfSize_onAxis(size: NSRect, axis: BCAxis): NSNumber;
  stringBySanitizingForNumberFormatter(formatter: NSNumberFormatter | null): NSString;
  stringByCalculatingMath(): NSString;
  numberValueUsingMath(): NSNumber;
  containsMathSymbols(): boolean;
  mathPrefix(): NSString;
  numberValueByUsingNumberFormatter(): NSNumber;
  uniqueSlugUsingEarlierSlugs(earlierSlugs: NSMutableDictionary<any, any> | {[key: string]: any} | null): NSString;
  svgURL(): NSString;
  copyWithZone(zone: NSZone | null): any;
  mutableCopyWithZone(zone: NSZone | null): any;

  pathComponents(): NSArray<any>;
  absolutePath(): boolean;
  lastPathComponent(): NSString;
  stringByDeletingLastPathComponent(): NSString;
  pathExtension(): NSString;
  stringByDeletingPathExtension(): NSString;
  stringByAbbreviatingWithTildeInPath(): NSString;
  stringByExpandingTildeInPath(): NSString;
  stringByStandardizingPath(): NSString;
  stringByResolvingSymlinksInPath(): NSString;
  fileSystemRepresentation(): string;
  length(): NSUInteger;
  doubleValue(): number;
  floatValue(): number;
  intValue(): number;
  integerValue(): NSInteger;
  longLongValue(): number;
  boolValue(): boolean;
  uppercaseString(): NSString;
  lowercaseString(): NSString;
  capitalizedString(): NSString;
  localizedUppercaseString(): NSString;
  localizedLowercaseString(): NSString;
  localizedCapitalizedString(): NSString;
  UTF8String(): string;
  fastestEncoding(): NSStringEncoding;
  smallestEncoding(): NSStringEncoding;
  decomposedStringWithCanonicalMapping(): NSString;
  precomposedStringWithCanonicalMapping(): NSString;
  decomposedStringWithCompatibilityMapping(): NSString;
  precomposedStringWithCompatibilityMapping(): NSString;
  description(): NSString;
  hash(): NSUInteger;
  stringByRemovingPercentEncoding(): NSString;
  slug(): NSString;
}

declare const NSString: {
  alloc(): NSStringUninitialized;
  class(): NSString;
  pathWithComponents(components: NSArray<any> | any[]): NSString;
  localizedNameOfStringEncoding(encoding: NSStringEncoding): NSString;
  string(): NSString;
  stringWithString(string: NSString | string): NSString;
  stringWithCharacters_length(characters: unichar, length: NSUInteger): NSString;
  stringWithUTF8String(nullTerminatedCString: string): NSString;
  stringWithFormat(format: NSString | string, ...args: any[]): NSString;
  localizedStringWithFormat(format: NSString | string, ...args: any[]): NSString;
  stringWithCString_encoding(cString: string, enc: NSStringEncoding): NSString;
  stringWithContentsOfURL_encoding_error(url: NSURL, enc: NSStringEncoding, error: MOPointer<NSError>): NSString;
  stringWithContentsOfFile_encoding_error(path: NSString | string, enc: NSStringEncoding, error: MOPointer<NSError>): NSString;
  stringWithContentsOfURL_usedEncoding_error(url: NSURL, enc: NSStringEncoding | null, error: MOPointer<NSError>): NSString;
  stringWithContentsOfFile_usedEncoding_error(path: NSString | string, enc: NSStringEncoding | null, error: MOPointer<NSError>): NSString;
  stringEncodingForData_encodingOptions_convertedString_usedLossyConversion(data: NSData, opts: NSDictionary<any, any> | {[key: string]: any} | null, string: NSString | string, usedLossyConversion: boolean | null): NSStringEncoding;
  stringWithContentsOfFile(path: NSString | string): any;
  stringWithContentsOfURL(url: NSURL): any;
  stringWithCString_length(bytes: string, length: NSUInteger): any;
  stringWithCString(bytes: string): any;
  stringWithPrefix_number(front: NSString | string, number: NSInteger): NSString;
  stringWithUUID(): any;
  nativeDecimalSeparator(): NSString;
  mathStringWithOperand1_operator_operand2(operand1: CGFloat, operator: NSString | string, operand2: CGFloat): NSString;
  svgStringWithPixelValue(value: CGFloat): NSString;
  svgStringWithNumberValue(value: CGFloat): NSString;
  svgStringWithPercentageValue(value: CGFloat): NSString;
  svgStringWithPercentageFractionalValue(value: CGFloat): NSString;
  stringWithInt_suffix(anInt: NSInteger, suffix: NSString | string): NSString;
  load(): void;
  instancesRespondToSelector(aSelector: string): boolean;
  conformsToProtocol(protocol: Protocol): boolean;
  instanceMethodForSelector(aSelector: string): IMP;
  isSubclassOfClass(aClass: any): boolean;
  hash(): NSUInteger;
  superclass(): any;
  description(): NSString;
  debugDescription(): NSString;
  useStoredAccessor(): boolean;
  keyPathsForValuesAffectingValueForKey(key: NSString | string): NSSet<any>;
  automaticallyNotifiesObserversForKey(key: NSString | string): boolean;
  setKeys_triggerChangeNotificationsForDependentKey(keys: NSArray<any> | any[], dependentKey: NSString | string): void;
  classFallbacksForKeyedArchiver(): NSArray<any>;
  classForKeyedUnarchiver(): any;
  version(): NSInteger;
  setVersion(aVersion: NSInteger): void;
  cancelPreviousPerformRequestsWithTarget_selector_object(aTarget: any, aSelector: string, anArgument: any | null): void;
  cancelPreviousPerformRequestsWithTarget(aTarget: any): void;
  exposeBinding(binding: NSBindingName): void;
  setDefaultPlaceholder_forMarker_withBinding(placeholder: any | null, marker: any | null, binding: NSBindingName): void;
  defaultPlaceholderForMarker_withBinding(marker: any | null, binding: NSBindingName): any;
  mo_swizzleAdditions(): void;
  mo_mocha(): MOClassDescription;
  isSelectorExcludedFromMochaScript(selector: string): boolean;
  selectorForMochaPropertyName(propertyName: NSString | string): string;
  availableStringEncodings(): NSStringEncoding;
  defaultCStringEncoding(): NSStringEncoding;
  supportsSecureCoding(): boolean;
  accessInstanceVariablesDirectly(): boolean;

}

