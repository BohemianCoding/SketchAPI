interface NSViewUninitialized<InitializedType = NSView> extends NSResponderUninitialized<NSView> {
  initWithFrame(frameRect: NSRect): InitializedType;
}

interface NSView extends NSResponder, INSAnimatablePropertyContainer, INSUserInterfaceItemIdentification, INSDraggingDestination, INSAppearanceCustomization, INSAccessibilityElement, INSAccessibility {
  reflectScrolledClipView(clipView: NSClipView): void;
  scrollClipView_toPoint(clipView: NSClipView, point: NSPoint): void;
  addConstraint(constraint: NSLayoutConstraint): void;
  addConstraints(constraints: NSArray<any> | any[]): void;
  removeConstraint(constraint: NSLayoutConstraint): void;
  removeConstraints(constraints: NSArray<any> | any[]): void;
  updateConstraintsForSubtreeIfNeeded(): void;
  layoutSubtreeIfNeeded(): void;
  layout(): void;
  alignmentRectForFrame(frame: NSRect): NSRect;
  frameForAlignmentRect(alignmentRect: NSRect): NSRect;
  invalidateIntrinsicContentSize(): void;
  contentHuggingPriorityForOrientation(orientation: NSLayoutConstraintOrientation): NSLayoutPriority;
  setContentHuggingPriority_forOrientation(priority: NSLayoutPriority, orientation: NSLayoutConstraintOrientation): void;
  contentCompressionResistancePriorityForOrientation(orientation: NSLayoutConstraintOrientation): NSLayoutPriority;
  setContentCompressionResistancePriority_forOrientation(priority: NSLayoutPriority, orientation: NSLayoutConstraintOrientation): void;
  constraintsAffectingLayoutForOrientation(orientation: NSLayoutConstraintOrientation): NSArray<any>;
  exerciseAmbiguityInLayout(): void;
  addLayoutGuide(guide: NSLayoutGuide): void;
  removeLayoutGuide(guide: NSLayoutGuide): void;
  rulerView_shouldMoveMarker(ruler: NSRulerView, marker: NSRulerMarker): boolean;
  rulerView_willMoveMarker_toLocation(ruler: NSRulerView, marker: NSRulerMarker, location: CGFloat): CGFloat;
  rulerView_didMoveMarker(ruler: NSRulerView, marker: NSRulerMarker): void;
  rulerView_shouldRemoveMarker(ruler: NSRulerView, marker: NSRulerMarker): boolean;
  rulerView_didRemoveMarker(ruler: NSRulerView, marker: NSRulerMarker): void;
  rulerView_shouldAddMarker(ruler: NSRulerView, marker: NSRulerMarker): boolean;
  rulerView_willAddMarker_atLocation(ruler: NSRulerView, marker: NSRulerMarker, location: CGFloat): CGFloat;
  rulerView_didAddMarker(ruler: NSRulerView, marker: NSRulerMarker): void;
  rulerView_handleMouseDown(ruler: NSRulerView, event: NSEvent): void;
  rulerView_willSetClientView(ruler: NSRulerView, newClient: NSView): void;
  rulerView_locationForPoint(ruler: NSRulerView, point: NSPoint): CGFloat;
  rulerView_pointForLocation(ruler: NSRulerView, point: CGFloat): NSPoint;
  isDescendantOf(view: NSView): boolean;
  ancestorSharedWithView(view: NSView): NSView;
  getRectsBeingDrawn_count(rects: MOPointer<NSRect>, count: NSInteger | null): void;
  needsToDrawRect(rect: NSRect): boolean;
  viewDidHide(): void;
  viewDidUnhide(): void;
  addSubview(view: NSView): void;
  addSubview_positioned_relativeTo(view: NSView, place: NSWindowOrderingMode, otherView: NSView | null): void;
  viewWillMoveToWindow(newWindow: NSWindow | null): void;
  viewDidMoveToWindow(): void;
  viewWillMoveToSuperview(newSuperview: NSView | null): void;
  viewDidMoveToSuperview(): void;
  didAddSubview(subview: NSView): void;
  willRemoveSubview(subview: NSView): void;
  removeFromSuperview(): void;
  replaceSubview_with(oldView: NSView, newView: NSView): void;
  removeFromSuperviewWithoutNeedingDisplay(): void;
  viewDidChangeBackingProperties(): void;
  resizeSubviewsWithOldSize(oldSize: NSSize): void;
  resizeWithOldSuperviewSize(oldSize: NSSize): void;
  setFrameOrigin(newOrigin: NSPoint): void;
  setFrameSize(newSize: NSSize): void;
  setBoundsOrigin(newOrigin: NSPoint): void;
  setBoundsSize(newSize: NSSize): void;
  translateOriginToPoint(translation: NSPoint): void;
  scaleUnitSquareToSize(newUnitSize: NSSize): void;
  rotateByAngle(angle: CGFloat): void;
  convertPoint_fromView(point: NSPoint, view: NSView | null): NSPoint;
  convertPoint_toView(point: NSPoint, view: NSView | null): NSPoint;
  convertSize_fromView(size: NSSize, view: NSView | null): NSSize;
  convertSize_toView(size: NSSize, view: NSView | null): NSSize;
  convertRect_fromView(rect: NSRect, view: NSView | null): NSRect;
  convertRect_toView(rect: NSRect, view: NSView | null): NSRect;
  backingAlignedRect_options(rect: NSRect, options: NSAlignmentOptions): NSRect;
  centerScanRect(rect: NSRect): NSRect;
  convertPointToBacking(point: NSPoint): NSPoint;
  convertPointFromBacking(point: NSPoint): NSPoint;
  convertSizeToBacking(size: NSSize): NSSize;
  convertSizeFromBacking(size: NSSize): NSSize;
  convertRectToBacking(rect: NSRect): NSRect;
  convertRectFromBacking(rect: NSRect): NSRect;
  convertPointToLayer(point: NSPoint): NSPoint;
  convertPointFromLayer(point: NSPoint): NSPoint;
  convertSizeToLayer(size: NSSize): NSSize;
  convertSizeFromLayer(size: NSSize): NSSize;
  convertRectToLayer(rect: NSRect): NSRect;
  convertRectFromLayer(rect: NSRect): NSRect;
  setNeedsDisplayInRect(invalidRect: NSRect): void;
  lockFocus(): void;
  unlockFocus(): void;
  lockFocusIfCanDraw(): boolean;
  lockFocusIfCanDrawInContext(context: NSGraphicsContext): boolean;
  display(): void;
  displayIfNeeded(): void;
  displayIfNeededIgnoringOpacity(): void;
  displayRect(rect: NSRect): void;
  displayIfNeededInRect(rect: NSRect): void;
  displayRectIgnoringOpacity(rect: NSRect): void;
  displayIfNeededInRectIgnoringOpacity(rect: NSRect): void;
  drawRect(dirtyRect: NSRect): void;
  displayRectIgnoringOpacity_inContext(rect: NSRect, context: NSGraphicsContext): void;
  bitmapImageRepForCachingDisplayInRect(rect: NSRect): NSBitmapImageRep;
  cacheDisplayInRect_toBitmapImageRep(rect: NSRect, bitmapImageRep: NSBitmapImageRep): void;
  viewWillDraw(): void;
  scrollPoint(point: NSPoint): void;
  scrollRectToVisible(rect: NSRect): boolean;
  autoscroll(event: NSEvent): boolean;
  adjustScroll(newVisible: NSRect): NSRect;
  scrollRect_by(rect: NSRect, delta: NSSize): void;
  translateRectsNeedingDisplayInRect_by(clipRect: NSRect, delta: NSSize): void;
  hitTest(point: NSPoint): NSView;
  mouse_inRect(point: NSPoint, rect: NSRect): boolean;
  viewWithTag(tag: NSInteger): NSView;
  performKeyEquivalent(event: NSEvent): boolean;
  acceptsFirstMouse(event: NSEvent | null): boolean;
  shouldDelayWindowOrderingForEvent(event: NSEvent): boolean;
  addCursorRect_cursor(rect: NSRect, object: NSCursor): void;
  removeCursorRect_cursor(rect: NSRect, object: NSCursor): void;
  discardCursorRects(): void;
  resetCursorRects(): void;
  addTrackingRect_owner_userData_assumeInside(rect: NSRect, owner: any, data: void | null, flag: boolean): NSTrackingRectTag;
  removeTrackingRect(tag: NSTrackingRectTag): void;
  makeBackingLayer(): CALayer;
  updateLayer(): void;
  addTrackingArea(trackingArea: NSTrackingArea): void;
  removeTrackingArea(trackingArea: NSTrackingArea): void;
  updateTrackingAreas(): void;
  menuForEvent(event: NSEvent): NSMenu;
  willOpenMenu_withEvent(menu: NSMenu, event: NSEvent): void;
  didCloseMenu_withEvent(menu: NSMenu, event: NSEvent | null): void;
  addToolTipRect_owner_userData(rect: NSRect, owner: any, data: void | null): NSToolTipTag;
  removeToolTip(tag: NSToolTipTag): void;
  removeAllToolTips(): void;
  viewWillStartLiveResize(): void;
  viewDidEndLiveResize(): void;
  getRectsExposedDuringLiveResize_count(exposedRects: [NSRect, NSRect, NSRect, NSRect], count: NSInteger): void;
  rectForSmartMagnificationAtPoint_inRect(location: NSPoint, visibleRect: NSRect): NSRect;
  prepareForReuse(): void;
  prepareContentInRect(rect: NSRect): void;
  viewDidChangeEffectiveAppearance(): void;
  setKeyboardFocusRingNeedsDisplayInRect(rect: NSRect): void;
  drawFocusRingMask(): void;
  noteFocusRingMaskChanged(): void;
  writeEPSInsideRect_toPasteboard(rect: NSRect, pasteboard: NSPasteboard): void;
  dataWithEPSInsideRect(rect: NSRect): NSData;
  writePDFInsideRect_toPasteboard(rect: NSRect, pasteboard: NSPasteboard): void;
  dataWithPDFInsideRect(rect: NSRect): NSData;
  print(sender: any | null): void;
  knowsPageRange(range: NSRangePointer): boolean;
  adjustPageWidthNew_left_right_limit(newRight: CGFloat, oldLeft: CGFloat, oldRight: CGFloat, rightLimit: CGFloat): void;
  adjustPageHeightNew_top_bottom_limit(newBottom: CGFloat, oldTop: CGFloat, oldBottom: CGFloat, bottomLimit: CGFloat): void;
  rectForPage(page: NSInteger): NSRect;
  locationOfPrintRect(rect: NSRect): NSPoint;
  drawPageBorderWithSize(borderSize: NSSize): void;
  drawSheetBorderWithSize(borderSize: NSSize): void;
  beginDocument(): void;
  endDocument(): void;
  beginPageInRect_atPlacement(rect: NSRect, location: NSPoint): void;
  endPage(): void;
  beginDraggingSessionWithItems_event_source(items: NSArray<any> | any[], event: NSEvent, source: any): NSDraggingSession;
  registerForDraggedTypes(newTypes: NSArray<any> | any[]): void;
  unregisterDraggedTypes(): void;
  enterFullScreenMode_withOptions(screen: NSScreen, options: NSDictionary<any, any> | {[key: string]: any} | null): boolean;
  exitFullScreenModeWithOptions(options: NSDictionary<any, any> | {[key: string]: any} | null): void;
  showDefinitionForAttributedString_atPoint(attrString: NSAttributedString | null, textBaselineOrigin: NSPoint): void;
  showDefinitionForAttributedString_range_options_baselineOriginProvider(attrString: NSAttributedString | null, targetRange: NSRange, options: NSDictionary<any, any> | {[key: string]: any} | null, originProvider: Block): void;
  addGestureRecognizer(gestureRecognizer: NSGestureRecognizer): void;
  removeGestureRecognizer(gestureRecognizer: NSGestureRecognizer): void;
  dragImage_at_offset_event_pasteboard_source_slideBack(image: NSImage, viewLocation: NSPoint, initialOffset: NSSize, event: NSEvent, pboard: NSPasteboard, sourceObj: any, slideFlag: boolean): void;
  dragFile_fromRect_slideBack_event(filename: NSString | string, rect: NSRect, flag: boolean, event: NSEvent): boolean;
  dragPromisedFilesOfTypes_fromRect_source_slideBack_event(typeArray: NSArray<any> | any[], rect: NSRect, sourceObject: any, flag: boolean, event: NSEvent): boolean;
  convertPointToBase(point: NSPoint): NSPoint;
  convertPointFromBase(point: NSPoint): NSPoint;
  convertSizeToBase(size: NSSize): NSSize;
  convertSizeFromBase(size: NSSize): NSSize;
  convertRectToBase(rect: NSRect): NSRect;
  convertRectFromBase(rect: NSRect): NSRect;
  performMnemonic(string: NSString | string): boolean;
  shouldDrawColor(): boolean;
  gState(): NSInteger;
  allocateGState(): void;
  releaseGState(): void;
  setUpGState(): void;
  renewGState(): void;
  addSubview_constrainedBy_priority(subview: NSView, insets: NSEdgeInsets, priority: NSLayoutPriority): void;
  constrainHeight(height: CGFloat): void;
  constrainHeight_priority(height: CGFloat, priority: NSLayoutPriority): void;
  constrainWidth(width: CGFloat): void;
  constrainWidth_priority(width: CGFloat, priority: NSLayoutPriority): void;
  heightConstraint(): NSLayoutConstraint;
  hideWithZeroHeight(): void;
  hideWithZeroWidth(): void;
  showWithHeight(height: CGFloat): void;
  showWithWidth(width: CGFloat): void;
  horizontalConstraintWithView(anotherView: NSView): NSLayoutConstraint;
  horizontalConstraintsWithView(anotherView: NSView): NSArray<any>;
  verticalConstraintWithView(anotherView: NSView): NSLayoutConstraint;
  verticalConstraintsWithView(anotherView: NSView): NSArray<any>;
  widthConstraint(): NSLayoutConstraint;
  setFrameHeight(height: CGFloat): void;
  setFrameWidth(width: CGFloat): void;
  setFrameOriginX(x: CGFloat): void;
  setFrameOriginY(y: CGFloat): void;
  setNeedsDisplay(): void;
  imageRepresentation(): NSImage;
  beginDragFromEvent_image_type_data(event: NSEvent, image: NSImage, type: NSString | string, propertyListData: any): void;
  beginDragFromEvent_image_writersBlock(event: NSEvent, image: NSImage, block: MSPasteboardItemWritingBlock): void;
  containingAncestorViewOfClass(ancestorViewClass: any): NSView;
  isContainedByCollapsedSplitViewSubview(): boolean;
  nestedSubviewWithIdentifier(identifer: NSUserInterfaceItemIdentifier): NSView;
  animateToFrameOrigin_completionBlock(origin: NSPoint, block: MSAnimationBlock): void;
  animateToFrameOriginX_completionBlock(x: NSInteger, block: MSAnimationBlock): void;
  animateToFrameOriginX(x: NSInteger): void;
  subViewsForResponderFixer(): NSArray<any>;
  enclosingStackView(): MSInspectorStackView;
  viewHistoryMaker(): MSHistoryMaker;
  clickShouldDismissPopover(popover: BCPopover): boolean;
  wantsSeparatorBetweenSelfAndView(view: NSView): boolean;
  separatorInsetBetweenSelfAndView(view: NSView): NSEdgeInsets;
  animator(): NSView;
  animationForKey(key: NSAnimatablePropertyKey): any;
  draggingEntered(sender: any): NSDragOperation;
  draggingUpdated(sender: any): NSDragOperation;
  draggingExited(sender: any | null): void;
  prepareForDragOperation(sender: any): boolean;
  performDragOperation(sender: any): boolean;
  concludeDragOperation(sender: any | null): void;
  draggingEnded(sender: any): void;
  wantsPeriodicDraggingUpdates(): boolean;
  updateDraggingItemsForDrag(sender: any | null): void;
  accessibilityFrame(): NSRect;
  accessibilityParent(): any;
  isAccessibilityFocused(): boolean;
  accessibilityIdentifier(): NSString;
  accessibilityLayoutPointForScreenPoint(point: NSPoint): NSPoint;
  accessibilityLayoutSizeForScreenSize(size: NSSize): NSSize;
  accessibilityScreenPointForLayoutPoint(point: NSPoint): NSPoint;
  accessibilityScreenSizeForLayoutSize(size: NSSize): NSSize;
  accessibilityCellForColumn_row(column: NSInteger, row: NSInteger): any;
  accessibilityAttributedStringForRange(range: NSRange): NSAttributedString;
  accessibilityRangeForLine(line: NSInteger): NSRange;
  accessibilityStringForRange(range: NSRange): NSString;
  accessibilityRangeForPosition(point: NSPoint): NSRange;
  accessibilityRangeForIndex(index: NSInteger): NSRange;
  accessibilityFrameForRange(range: NSRange): NSRect;
  accessibilityRTFForRange(range: NSRange): NSData;
  accessibilityStyleRangeForIndex(index: NSInteger): NSRange;
  accessibilityLineForIndex(index: NSInteger): NSInteger;
  accessibilityPerformCancel(): boolean;
  accessibilityPerformConfirm(): boolean;
  accessibilityPerformDecrement(): boolean;
  accessibilityPerformDelete(): boolean;
  accessibilityPerformIncrement(): boolean;
  accessibilityPerformPick(): boolean;
  accessibilityPerformPress(): boolean;
  accessibilityPerformRaise(): boolean;
  accessibilityPerformShowAlternateUI(): boolean;
  accessibilityPerformShowDefaultUI(): boolean;
  accessibilityPerformShowMenu(): boolean;
  isAccessibilitySelectorAllowed(selector: string): boolean;

  candidateListTouchBarItem(): NSCandidateListTouchBarItem<any>;
  leadingAnchor(): NSLayoutXAxisAnchor;
  trailingAnchor(): NSLayoutXAxisAnchor;
  leftAnchor(): NSLayoutXAxisAnchor;
  rightAnchor(): NSLayoutXAxisAnchor;
  topAnchor(): NSLayoutYAxisAnchor;
  bottomAnchor(): NSLayoutYAxisAnchor;
  widthAnchor(): NSLayoutDimension;
  heightAnchor(): NSLayoutDimension;
  centerXAnchor(): NSLayoutXAxisAnchor;
  centerYAnchor(): NSLayoutYAxisAnchor;
  firstBaselineAnchor(): NSLayoutYAxisAnchor;
  lastBaselineAnchor(): NSLayoutYAxisAnchor;
  constraints(): NSArray<any>;
  needsUpdateConstraints(): boolean;
  setNeedsUpdateConstraints(needsUpdateConstraints: boolean): void;
  needsLayout(): boolean;
  setNeedsLayout(needsLayout: boolean): void;
  translatesAutoresizingMaskIntoConstraints(): boolean;
  setTranslatesAutoresizingMaskIntoConstraints(translatesAutoresizingMaskIntoConstraints: boolean): void;
  alignmentRectInsets(): NSEdgeInsets;
  firstBaselineOffsetFromTop(): CGFloat;
  lastBaselineOffsetFromBottom(): CGFloat;
  baselineOffsetFromBottom(): CGFloat;
  intrinsicContentSize(): NSSize;
  fittingSize(): NSSize;
  hasAmbiguousLayout(): boolean;
  layoutGuides(): NSArray<any>;
  enclosingMenuItem(): NSMenuItem;
  wantsBestResolutionOpenGLSurface(): boolean;
  setWantsBestResolutionOpenGLSurface(wantsBestResolutionOpenGLSurface: boolean): void;
  wantsExtendedDynamicRangeOpenGLSurface(): boolean;
  setWantsExtendedDynamicRangeOpenGLSurface(wantsExtendedDynamicRangeOpenGLSurface: boolean): void;
  pressureConfiguration(): NSPressureConfiguration;
  setPressureConfiguration(pressureConfiguration: NSPressureConfiguration): void;
  window(): NSWindow;
  superview(): NSView;
  subviews(): NSArray<any>;
  setSubviews(subviews: NSArray<any> | any[]): void;
  opaqueAncestor(): NSView;
  hidden(): boolean;
  setHidden(hidden: boolean): void;
  hiddenOrHasHiddenAncestor(): boolean;
  wantsDefaultClipping(): boolean;
  postsFrameChangedNotifications(): boolean;
  setPostsFrameChangedNotifications(postsFrameChangedNotifications: boolean): void;
  autoresizesSubviews(): boolean;
  setAutoresizesSubviews(autoresizesSubviews: boolean): void;
  autoresizingMask(): NSAutoresizingMaskOptions;
  setAutoresizingMask(autoresizingMask: NSAutoresizingMaskOptions): void;
  frame(): NSRect;
  setFrame(frame: NSRect): void;
  frameRotation(): CGFloat;
  setFrameRotation(frameRotation: CGFloat): void;
  frameCenterRotation(): CGFloat;
  setFrameCenterRotation(frameCenterRotation: CGFloat): void;
  boundsRotation(): CGFloat;
  setBoundsRotation(boundsRotation: CGFloat): void;
  bounds(): NSRect;
  setBounds(bounds: NSRect): void;
  flipped(): boolean;
  rotatedFromBase(): boolean;
  rotatedOrScaledFromBase(): boolean;
  opaque(): boolean;
  canDrawConcurrently(): boolean;
  setCanDrawConcurrently(canDrawConcurrently: boolean): void;
  canDraw(): boolean;
  needsDisplay(): boolean;
  setNeedsDisplay(needsDisplay: boolean): void;
  visibleRect(): NSRect;
  tag(): NSInteger;
  needsPanelToBecomeKey(): boolean;
  mouseDownCanMoveWindow(): boolean;
  acceptsTouchEvents(): boolean;
  setAcceptsTouchEvents(acceptsTouchEvents: boolean): void;
  wantsRestingTouches(): boolean;
  setWantsRestingTouches(wantsRestingTouches: boolean): void;
  layerContentsRedrawPolicy(): NSViewLayerContentsRedrawPolicy;
  setLayerContentsRedrawPolicy(layerContentsRedrawPolicy: NSViewLayerContentsRedrawPolicy): void;
  layerContentsPlacement(): NSViewLayerContentsPlacement;
  setLayerContentsPlacement(layerContentsPlacement: NSViewLayerContentsPlacement): void;
  wantsLayer(): boolean;
  setWantsLayer(wantsLayer: boolean): void;
  layer(): CALayer;
  setLayer(layer: CALayer): void;
  wantsUpdateLayer(): boolean;
  canDrawSubviewsIntoLayer(): boolean;
  setCanDrawSubviewsIntoLayer(canDrawSubviewsIntoLayer: boolean): void;
  alphaValue(): CGFloat;
  setAlphaValue(alphaValue: CGFloat): void;
  layerUsesCoreImageFilters(): boolean;
  setLayerUsesCoreImageFilters(layerUsesCoreImageFilters: boolean): void;
  backgroundFilters(): NSArray<any>;
  setBackgroundFilters(backgroundFilters: NSArray<any> | any[]): void;
  compositingFilter(): CIFilter;
  setCompositingFilter(compositingFilter: CIFilter): void;
  contentFilters(): NSArray<any>;
  setContentFilters(contentFilters: NSArray<any> | any[]): void;
  shadow(): NSShadow;
  setShadow(shadow: NSShadow): void;
  trackingAreas(): NSArray<any>;
  postsBoundsChangedNotifications(): boolean;
  setPostsBoundsChangedNotifications(postsBoundsChangedNotifications: boolean): void;
  enclosingScrollView(): NSScrollView;
  toolTip(): NSString;
  setToolTip(toolTip: NSString | string): void;
  inLiveResize(): boolean;
  preservesContentDuringLiveResize(): boolean;
  rectPreservedDuringLiveResize(): NSRect;
  inputContext(): NSTextInputContext;
  userInterfaceLayoutDirection(): NSUserInterfaceLayoutDirection;
  setUserInterfaceLayoutDirection(userInterfaceLayoutDirection: NSUserInterfaceLayoutDirection): void;
  preparedContentRect(): NSRect;
  setPreparedContentRect(preparedContentRect: NSRect): void;
  allowsVibrancy(): boolean;
  nextKeyView(): NSView;
  setNextKeyView(nextKeyView: NSView): void;
  previousKeyView(): NSView;
  nextValidKeyView(): NSView;
  previousValidKeyView(): NSView;
  canBecomeKeyView(): boolean;
  focusRingType(): NSFocusRingType;
  setFocusRingType(focusRingType: NSFocusRingType): void;
  focusRingMaskBounds(): NSRect;
  heightAdjustLimit(): CGFloat;
  widthAdjustLimit(): CGFloat;
  pageHeader(): NSAttributedString;
  pageFooter(): NSAttributedString;
  printJobTitle(): NSString;
  registeredDraggedTypes(): NSArray<any>;
  inFullScreenMode(): boolean;
  drawingFindIndicator(): boolean;
  gestureRecognizers(): NSArray<any>;
  setGestureRecognizers(gestureRecognizers: NSArray<any> | any[]): void;
  allowedTouchTypes(): NSTouchTypeMask;
  setAllowedTouchTypes(allowedTouchTypes: NSTouchTypeMask): void;
  dropDelegate_bc(): NSObject;
  setDropDelegate_bc(dropDelegate_bc: NSObject): void;
  allSubviews(): NSArray<any>;
  canBeKeyView(): boolean;
  wantsSeparator(): boolean;
  animations(): NSDictionary<any, any>;
  setAnimations(animations: NSDictionary<any, any> | {[key: string]: any}): void;
  identifier(): NSUserInterfaceItemIdentifier;
  setIdentifier(identifier: NSUserInterfaceItemIdentifier): void;
  appearance(): NSAppearance;
  setAppearance(appearance: NSAppearance): void;
  effectiveAppearance(): NSAppearance;
  accessibilityElement(): boolean;
  setAccessibilityElement(accessibilityElement: boolean): void;
  accessibilityFrame(): NSRect;
  setAccessibilityFrame(accessibilityFrame: NSRect): void;
  accessibilityFocused(): boolean;
  setAccessibilityFocused(accessibilityFocused: boolean): void;
  accessibilityActivationPoint(): NSPoint;
  setAccessibilityActivationPoint(accessibilityActivationPoint: NSPoint): void;
  accessibilityTopLevelUIElement(): any;
  setAccessibilityTopLevelUIElement(accessibilityTopLevelUIElement: any): void;
  accessibilityURL(): NSURL;
  setAccessibilityURL(accessibilityURL: NSURL): void;
  accessibilityValue(): any;
  setAccessibilityValue(accessibilityValue: any): void;
  accessibilityValueDescription(): NSString;
  setAccessibilityValueDescription(accessibilityValueDescription: NSString | string): void;
  accessibilityVisibleChildren(): NSArray<any>;
  setAccessibilityVisibleChildren(accessibilityVisibleChildren: NSArray<any> | any[]): void;
  accessibilitySubrole(): NSAccessibilitySubrole;
  setAccessibilitySubrole(accessibilitySubrole: NSAccessibilitySubrole): void;
  accessibilityTitle(): NSString;
  setAccessibilityTitle(accessibilityTitle: NSString | string): void;
  accessibilityTitleUIElement(): any;
  setAccessibilityTitleUIElement(accessibilityTitleUIElement: any): void;
  accessibilityNextContents(): NSArray<any>;
  setAccessibilityNextContents(accessibilityNextContents: NSArray<any> | any[]): void;
  accessibilityOrientation(): NSAccessibilityOrientation;
  setAccessibilityOrientation(accessibilityOrientation: NSAccessibilityOrientation): void;
  accessibilityOverflowButton(): any;
  setAccessibilityOverflowButton(accessibilityOverflowButton: any): void;
  accessibilityParent(): any;
  setAccessibilityParent(accessibilityParent: any): void;
  accessibilityPlaceholderValue(): NSString;
  setAccessibilityPlaceholderValue(accessibilityPlaceholderValue: NSString | string): void;
  accessibilityPreviousContents(): NSArray<any>;
  setAccessibilityPreviousContents(accessibilityPreviousContents: NSArray<any> | any[]): void;
  accessibilityRole(): NSAccessibilityRole;
  setAccessibilityRole(accessibilityRole: NSAccessibilityRole): void;
  accessibilityRoleDescription(): NSString;
  setAccessibilityRoleDescription(accessibilityRoleDescription: NSString | string): void;
  accessibilitySearchButton(): any;
  setAccessibilitySearchButton(accessibilitySearchButton: any): void;
  accessibilitySearchMenu(): any;
  setAccessibilitySearchMenu(accessibilitySearchMenu: any): void;
  accessibilitySelected(): boolean;
  setAccessibilitySelected(accessibilitySelected: boolean): void;
  accessibilitySelectedChildren(): NSArray<any>;
  setAccessibilitySelectedChildren(accessibilitySelectedChildren: NSArray<any> | any[]): void;
  accessibilityServesAsTitleForUIElements(): NSArray<any>;
  setAccessibilityServesAsTitleForUIElements(accessibilityServesAsTitleForUIElements: NSArray<any> | any[]): void;
  accessibilityShownMenu(): any;
  setAccessibilityShownMenu(accessibilityShownMenu: any): void;
  accessibilityMinValue(): any;
  setAccessibilityMinValue(accessibilityMinValue: any): void;
  accessibilityMaxValue(): any;
  setAccessibilityMaxValue(accessibilityMaxValue: any): void;
  accessibilityLinkedUIElements(): NSArray<any>;
  setAccessibilityLinkedUIElements(accessibilityLinkedUIElements: NSArray<any> | any[]): void;
  accessibilityWindow(): any;
  setAccessibilityWindow(accessibilityWindow: any): void;
  accessibilityIdentifier(): NSString;
  setAccessibilityIdentifier(accessibilityIdentifier: NSString | string): void;
  accessibilityHelp(): NSString;
  setAccessibilityHelp(accessibilityHelp: NSString | string): void;
  accessibilityFilename(): NSString;
  setAccessibilityFilename(accessibilityFilename: NSString | string): void;
  accessibilityExpanded(): boolean;
  setAccessibilityExpanded(accessibilityExpanded: boolean): void;
  accessibilityEdited(): boolean;
  setAccessibilityEdited(accessibilityEdited: boolean): void;
  accessibilityEnabled(): boolean;
  setAccessibilityEnabled(accessibilityEnabled: boolean): void;
  accessibilityChildren(): NSArray<any>;
  setAccessibilityChildren(accessibilityChildren: NSArray<any> | any[]): void;
  accessibilityChildrenInNavigationOrder(): NSArray<any>;
  setAccessibilityChildrenInNavigationOrder(accessibilityChildrenInNavigationOrder: NSArray<any> | any[]): void;
  accessibilityClearButton(): any;
  setAccessibilityClearButton(accessibilityClearButton: any): void;
  accessibilityCancelButton(): any;
  setAccessibilityCancelButton(accessibilityCancelButton: any): void;
  accessibilityProtectedContent(): boolean;
  setAccessibilityProtectedContent(accessibilityProtectedContent: boolean): void;
  accessibilityContents(): NSArray<any>;
  setAccessibilityContents(accessibilityContents: NSArray<any> | any[]): void;
  accessibilityLabel(): NSString;
  setAccessibilityLabel(accessibilityLabel: NSString | string): void;
  accessibilityAlternateUIVisible(): boolean;
  setAccessibilityAlternateUIVisible(accessibilityAlternateUIVisible: boolean): void;
  accessibilitySharedFocusElements(): NSArray<any>;
  setAccessibilitySharedFocusElements(accessibilitySharedFocusElements: NSArray<any> | any[]): void;
  accessibilityRequired(): boolean;
  setAccessibilityRequired(accessibilityRequired: boolean): void;
  accessibilityCustomRotors(): NSArray<any>;
  setAccessibilityCustomRotors(accessibilityCustomRotors: NSArray<any> | any[]): void;
  accessibilityApplicationFocusedUIElement(): any;
  setAccessibilityApplicationFocusedUIElement(accessibilityApplicationFocusedUIElement: any): void;
  accessibilityMainWindow(): any;
  setAccessibilityMainWindow(accessibilityMainWindow: any): void;
  accessibilityHidden(): boolean;
  setAccessibilityHidden(accessibilityHidden: boolean): void;
  accessibilityFrontmost(): boolean;
  setAccessibilityFrontmost(accessibilityFrontmost: boolean): void;
  accessibilityFocusedWindow(): any;
  setAccessibilityFocusedWindow(accessibilityFocusedWindow: any): void;
  accessibilityWindows(): NSArray<any>;
  setAccessibilityWindows(accessibilityWindows: NSArray<any> | any[]): void;
  accessibilityExtrasMenuBar(): any;
  setAccessibilityExtrasMenuBar(accessibilityExtrasMenuBar: any): void;
  accessibilityMenuBar(): any;
  setAccessibilityMenuBar(accessibilityMenuBar: any): void;
  accessibilityColumnTitles(): NSArray<any>;
  setAccessibilityColumnTitles(accessibilityColumnTitles: NSArray<any> | any[]): void;
  accessibilityOrderedByRow(): boolean;
  setAccessibilityOrderedByRow(accessibilityOrderedByRow: boolean): void;
  accessibilityHorizontalUnits(): NSAccessibilityUnits;
  setAccessibilityHorizontalUnits(accessibilityHorizontalUnits: NSAccessibilityUnits): void;
  accessibilityVerticalUnits(): NSAccessibilityUnits;
  setAccessibilityVerticalUnits(accessibilityVerticalUnits: NSAccessibilityUnits): void;
  accessibilityHorizontalUnitDescription(): NSString;
  setAccessibilityHorizontalUnitDescription(accessibilityHorizontalUnitDescription: NSString | string): void;
  accessibilityVerticalUnitDescription(): NSString;
  setAccessibilityVerticalUnitDescription(accessibilityVerticalUnitDescription: NSString | string): void;
  accessibilityHandles(): NSArray<any>;
  setAccessibilityHandles(accessibilityHandles: NSArray<any> | any[]): void;
  accessibilityWarningValue(): any;
  setAccessibilityWarningValue(accessibilityWarningValue: any): void;
  accessibilityCriticalValue(): any;
  setAccessibilityCriticalValue(accessibilityCriticalValue: any): void;
  accessibilityDisclosed(): boolean;
  setAccessibilityDisclosed(accessibilityDisclosed: boolean): void;
  accessibilityDisclosedByRow(): any;
  setAccessibilityDisclosedByRow(accessibilityDisclosedByRow: any): void;
  accessibilityDisclosedRows(): any;
  setAccessibilityDisclosedRows(accessibilityDisclosedRows: any): void;
  accessibilityDisclosureLevel(): NSInteger;
  setAccessibilityDisclosureLevel(accessibilityDisclosureLevel: NSInteger): void;
  accessibilityMarkerUIElements(): NSArray<any>;
  setAccessibilityMarkerUIElements(accessibilityMarkerUIElements: NSArray<any> | any[]): void;
  accessibilityMarkerValues(): any;
  setAccessibilityMarkerValues(accessibilityMarkerValues: any): void;
  accessibilityMarkerGroupUIElement(): any;
  setAccessibilityMarkerGroupUIElement(accessibilityMarkerGroupUIElement: any): void;
  accessibilityUnits(): NSAccessibilityUnits;
  setAccessibilityUnits(accessibilityUnits: NSAccessibilityUnits): void;
  accessibilityUnitDescription(): NSString;
  setAccessibilityUnitDescription(accessibilityUnitDescription: NSString | string): void;
  accessibilityRulerMarkerType(): NSAccessibilityRulerMarkerType;
  setAccessibilityRulerMarkerType(accessibilityRulerMarkerType: NSAccessibilityRulerMarkerType): void;
  accessibilityMarkerTypeDescription(): NSString;
  setAccessibilityMarkerTypeDescription(accessibilityMarkerTypeDescription: NSString | string): void;
  accessibilityHorizontalScrollBar(): any;
  setAccessibilityHorizontalScrollBar(accessibilityHorizontalScrollBar: any): void;
  accessibilityVerticalScrollBar(): any;
  setAccessibilityVerticalScrollBar(accessibilityVerticalScrollBar: any): void;
  accessibilityAllowedValues(): NSArray<any>;
  setAccessibilityAllowedValues(accessibilityAllowedValues: NSArray<any> | any[]): void;
  accessibilityLabelUIElements(): NSArray<any>;
  setAccessibilityLabelUIElements(accessibilityLabelUIElements: NSArray<any> | any[]): void;
  accessibilityLabelValue(): number;
  setAccessibilityLabelValue(accessibilityLabelValue: number): void;
  accessibilitySplitters(): NSArray<any>;
  setAccessibilitySplitters(accessibilitySplitters: NSArray<any> | any[]): void;
  accessibilityDecrementButton(): any;
  setAccessibilityDecrementButton(accessibilityDecrementButton: any): void;
  accessibilityIncrementButton(): any;
  setAccessibilityIncrementButton(accessibilityIncrementButton: any): void;
  accessibilityTabs(): NSArray<any>;
  setAccessibilityTabs(accessibilityTabs: NSArray<any> | any[]): void;
  accessibilityHeader(): any;
  setAccessibilityHeader(accessibilityHeader: any): void;
  accessibilityColumnCount(): NSInteger;
  setAccessibilityColumnCount(accessibilityColumnCount: NSInteger): void;
  accessibilityRowCount(): NSInteger;
  setAccessibilityRowCount(accessibilityRowCount: NSInteger): void;
  accessibilityIndex(): NSInteger;
  setAccessibilityIndex(accessibilityIndex: NSInteger): void;
  accessibilityColumns(): NSArray<any>;
  setAccessibilityColumns(accessibilityColumns: NSArray<any> | any[]): void;
  accessibilityRows(): NSArray<any>;
  setAccessibilityRows(accessibilityRows: NSArray<any> | any[]): void;
  accessibilityVisibleRows(): NSArray<any>;
  setAccessibilityVisibleRows(accessibilityVisibleRows: NSArray<any> | any[]): void;
  accessibilitySelectedRows(): NSArray<any>;
  setAccessibilitySelectedRows(accessibilitySelectedRows: NSArray<any> | any[]): void;
  accessibilityVisibleColumns(): NSArray<any>;
  setAccessibilityVisibleColumns(accessibilityVisibleColumns: NSArray<any> | any[]): void;
  accessibilitySelectedColumns(): NSArray<any>;
  setAccessibilitySelectedColumns(accessibilitySelectedColumns: NSArray<any> | any[]): void;
  accessibilitySortDirection(): NSAccessibilitySortDirection;
  setAccessibilitySortDirection(accessibilitySortDirection: NSAccessibilitySortDirection): void;
  accessibilityRowHeaderUIElements(): NSArray<any>;
  setAccessibilityRowHeaderUIElements(accessibilityRowHeaderUIElements: NSArray<any> | any[]): void;
  accessibilitySelectedCells(): NSArray<any>;
  setAccessibilitySelectedCells(accessibilitySelectedCells: NSArray<any> | any[]): void;
  accessibilityVisibleCells(): NSArray<any>;
  setAccessibilityVisibleCells(accessibilityVisibleCells: NSArray<any> | any[]): void;
  accessibilityColumnHeaderUIElements(): NSArray<any>;
  setAccessibilityColumnHeaderUIElements(accessibilityColumnHeaderUIElements: NSArray<any> | any[]): void;
  accessibilityRowIndexRange(): NSRange;
  setAccessibilityRowIndexRange(accessibilityRowIndexRange: NSRange): void;
  accessibilityColumnIndexRange(): NSRange;
  setAccessibilityColumnIndexRange(accessibilityColumnIndexRange: NSRange): void;
  accessibilityInsertionPointLineNumber(): NSInteger;
  setAccessibilityInsertionPointLineNumber(accessibilityInsertionPointLineNumber: NSInteger): void;
  accessibilitySharedCharacterRange(): NSRange;
  setAccessibilitySharedCharacterRange(accessibilitySharedCharacterRange: NSRange): void;
  accessibilitySharedTextUIElements(): NSArray<any>;
  setAccessibilitySharedTextUIElements(accessibilitySharedTextUIElements: NSArray<any> | any[]): void;
  accessibilityVisibleCharacterRange(): NSRange;
  setAccessibilityVisibleCharacterRange(accessibilityVisibleCharacterRange: NSRange): void;
  accessibilityNumberOfCharacters(): NSInteger;
  setAccessibilityNumberOfCharacters(accessibilityNumberOfCharacters: NSInteger): void;
  accessibilitySelectedText(): NSString;
  setAccessibilitySelectedText(accessibilitySelectedText: NSString | string): void;
  accessibilitySelectedTextRange(): NSRange;
  setAccessibilitySelectedTextRange(accessibilitySelectedTextRange: NSRange): void;
  accessibilitySelectedTextRanges(): NSArray<any>;
  setAccessibilitySelectedTextRanges(accessibilitySelectedTextRanges: NSArray<any> | any[]): void;
  accessibilityToolbarButton(): any;
  setAccessibilityToolbarButton(accessibilityToolbarButton: any): void;
  accessibilityModal(): boolean;
  setAccessibilityModal(accessibilityModal: boolean): void;
  accessibilityProxy(): any;
  setAccessibilityProxy(accessibilityProxy: any): void;
  accessibilityMain(): boolean;
  setAccessibilityMain(accessibilityMain: boolean): void;
  accessibilityFullScreenButton(): any;
  setAccessibilityFullScreenButton(accessibilityFullScreenButton: any): void;
  accessibilityGrowArea(): any;
  setAccessibilityGrowArea(accessibilityGrowArea: any): void;
  accessibilityDocument(): NSString;
  setAccessibilityDocument(accessibilityDocument: NSString | string): void;
  accessibilityDefaultButton(): any;
  setAccessibilityDefaultButton(accessibilityDefaultButton: any): void;
  accessibilityCloseButton(): any;
  setAccessibilityCloseButton(accessibilityCloseButton: any): void;
  accessibilityZoomButton(): any;
  setAccessibilityZoomButton(accessibilityZoomButton: any): void;
  accessibilityMinimizeButton(): any;
  setAccessibilityMinimizeButton(accessibilityMinimizeButton: any): void;
  accessibilityMinimized(): boolean;
  setAccessibilityMinimized(accessibilityMinimized: boolean): void;
  accessibilityCustomActions(): NSArray<any>;
  setAccessibilityCustomActions(accessibilityCustomActions: NSArray<any> | any[]): void;
}

declare const NSView: {
  alloc(): NSViewUninitialized;
  class(): NSView;
  defaultAnimationForKey(key: NSAnimatablePropertyKey): any;
  requiresConstraintBasedLayout(): boolean;
  focusView(): NSView;
  defaultMenu(): NSMenu;
  compatibleWithResponsiveScrolling(): boolean;
  defaultFocusRingType(): NSFocusRingType;
  restorableStateKeyPaths(): NSArray<any>;

}

