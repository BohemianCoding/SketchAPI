interface MSLayerUninitialized<InitializedType = MSLayer> extends _MSLayerUninitialized<MSLayer> {
  initWithFrame(frame: NSRect): InitializedType;
}
interface MSLayer extends _MSLayer, IMSLayer, INSCopying, IMSRectDelegate {
  hudDescription(): NSString;
  layerDidResizeFromInspector(axis: BCAxis): void;
  boundsOfParentLayer(): NSRect;
  minimumAdjustedRectForValue_axis_anchor(value: CGFloat, axis: BCAxis, anchor: BCCorner): CGRect;
  layersByConvertingToOutlines(): NSArray<any>;
  canConvertToOutlines(): boolean;
  replaceWithInstanceOfSymbol(symbol: MSSymbolMaster): MSSymbolInstance;
  enumerateAnchorsForSnappingOnAxes_includingCenter_usingBlock(axes: BCAxisMask, includeCenter: boolean, block: Block): void;
  canSnap_toLayer(snapType: MSSnapType, otherLayer: MSLayer): boolean;
  styleForBooleanOperation(): MSStyle;
  supportsInnerOuterBorders(): boolean;
  supportsMultipleShadows(): boolean;
  changeColor(sender: any): void;
  displayName(): NSString;
  parentForInsertingLayers(): MSLayerGroup;
  CSSAttributeString(): NSString;
  CSSAttributes(): NSArray<any>;
  resetConstraints(): void;
  replaceFonts(fontReplacements: NSDictionary<any, any> | {[key: string]: any}): void;
  selectionHitTest_options_zoomValue(point: NSPoint, options: MSLayerSelectionOptions, zoomValue: CGFloat): MSHitTestResult;
  containsPoint_options_zoomValue(point: NSPoint, options: MSLayerSelectionOptions, zoomValue: CGFloat): boolean;
  hitTestRect_options(selectionRect: NSRect, options: MSLayerSelectionOptions): boolean;
  layoutDirection(): NSUserInterfaceLayoutDirection;
  applyOverrides_document(overrides: NSArray<any> | any[], document: MSImmutableDocumentData): void;
  applyOverride_document(overrideValue: MSImmutableOverrideValue, document: MSImmutableDocumentData): void;
  applyRotation_explicitRotationCenter(rotation: CGFloat, rotationCenter: NSValue | null): void;
  applyUserVisibleRotation_explicitRotationCenter(userVisibleRotation: CGFloat, rotationCenter: NSValue | null): void;
  pathInCoordinateSpace(coordinateSpace: any | null): MSPath;
  beginEditingFrame(): void;
  endEditingFrame(): void;
  makeNameUniqueWithOptions(options: MSLayerRenameOptions): void;
  makeNameUniqueInRoot_withOptions(root: any, options: MSLayerRenameOptions): void;
  rootForNameUniquing(): any;
  frameForTransforms(): NSRect;
  absoluteRect(): MSAbsoluteRect;
  setWidthRespectingProportions(newWidth: CGFloat): void;
  setHeightRespectingProportions(newHeight: CGFloat): void;
  calculateProportions(): void;
  makeOriginIntegral(): void;
  makeRectIntegral(): void;
  isRectIntegral(): boolean;
  moveBySuggestedOffset(offset: CGVector): void;
  compareFrameFrom_withComparisonforPurpose(object: MSLayer, purpose: MSModelComparisonPurpose): boolean;
  selectionCornerMaskWithZoomValue(zoomValue: CGFloat): BCCornerMask;
  refreshOverlay(): void;
  absoluteInfluenceRect(): NSRect;
  alignmentRectInCoordinateSpace_options(coordinateSpace: any | null, options: MSAlignmentRectOptions): NSRect;
  frameForAlignmentRect(alignmentRect: NSRect): NSRect;
  select_byExtendingSelection(flag: boolean, expand: boolean): void;
  select_byExtendingSelection_showSelection(shouldSelect: boolean, expand: boolean, showSelection: boolean): void;
  containsSelectedItemIncludingSelf(includeSelf: boolean): boolean;
  isSelectableOnCanvasWithOptions(options: MSLayerSelectionOptions): boolean;
  isOpenForSelectionWithOptions(options: MSLayerSelectionOptions): boolean;
  limitsSelectionToBounds(): boolean;
  selectableLayersWithOptions(options: MSLayerSelectionOptions): NSArray<any>;
  parentShape(): MSShapeGroup;
  parentSymbol(): MSSymbolMaster;
  parentRoot(): MSLayerGroup;
  removeFromParent(): void;
  ancestorsAndSelf(): NSArray<any>;
  ancestors(): NSArray<any>;
  canContainLayer(layer: MSLayer): boolean;
  transform(): NSAffineTransform;
  ancestorsAndSelfTransforms(): NSArray<any>;
  concatAncestorsAndSelfTransforms(): void;
  canBeTransformed(): boolean;
  canRotate(): boolean;
  canScale(): boolean;
  hasEnabledBackgroundBlur(): boolean;
  moveInLayerTreeInBlock(block: BCVoidBlock): void;
  multiplyBy(amount: CGFloat): void;
  layerDidEndResize(): void;
  layerDidResizeFromRect_corner(rect: NSRect, corner: BCCorner): void;
  calculateMinimumSize(): NSSize;
  allSymbolInstancesInChildren(): NSSet<any>;
  isLine(): boolean;
  resetFlow(): void;
  isPartOfClippingMask(): boolean;
  hasClippingMask(): boolean;
  candidatesForMasking(): NSArray<any>;
  closestClippingLayer(): MSShapeGroup;
  followMaskChainForLayerAtIndex_usingBlock(index: NSUInteger, block: Block): void;
  addChangeObserver(observer: any): void;
  removeChangeObserver(observer: any): void;
  enumeratorWithOptions(options: MSLayerEnumeratorFlags): MSLayerEnumerator<any>;
  configureBackgroundOfRequest(request: MSExportRequest): void;
  adjustAfterInsert(): void;
  handleDoubleClick(): boolean;
  handlerClass(): any;
  shouldRefreshOverlayForFlows(): boolean;
  inspectorSections(): NSDictionary<any, any>;
  writeBitmapImageToFile(path: NSString | string): void;
  shouldDrawSelection(): boolean;
  shouldDrawSelectionStroke(): boolean;
  cornerRectType(): MSDotRectType;
  shouldFlattenAfterRotate(): boolean;

  canChangeBooleanOperation(): boolean;
  isActivePartInBooleanOperation(): boolean;
  shareableObjectType(): MSShareableObjectType;
  sharedMaster(): MSShareableObject;
  hasFixedEdges(): boolean;
  setHasFixedEdges(hasFixedEdges: boolean): void;
  dataSupplierIdentifier(): NSString;
  setDataSupplierIdentifier(dataSupplierIdentifier: NSString | string): void;
  userVisibleRotation(): CGFloat;
  constrainProportions(): boolean;
  setConstrainProportions(constrainProportions: boolean): void;
  proportions(): CGFloat;
  setProportions(proportions: CGFloat): void;
  pathInBounds(): MSPath;
  pathInFrame(): MSPath;
  pathInFrameWithTransforms(): MSPath;
  rect(): CGRect;
  setRect(rect: CGRect): void;
  bounds(): CGRect;
  origin(): CGPoint;
  setOrigin(origin: CGPoint): void;
  center(): CGPoint;
  setCenter(center: CGPoint): void;
  isExpanded(): boolean;
  absolutePosition(): NSPoint;
  setAbsolutePosition(absolutePosition: NSPoint): void;
  absoluteRotation(): CGFloat;
  setAbsoluteRotation(absoluteRotation: CGFloat): void;
  absoluteCenter(): CGPoint;
  setAbsoluteCenter(absoluteCenter: CGPoint): void;
  absoluteIsFlippedHorizontal(): boolean;
  setAbsoluteIsFlippedHorizontal(absoluteIsFlippedHorizontal: boolean): void;
  absoluteIsFlippedVertical(): boolean;
  setAbsoluteIsFlippedVertical(absoluteIsFlippedVertical: boolean): void;
  isSelected(): boolean;
  parentPage(): MSPage;
  parentArtboard(): MSArtboardGroup;
  ancestry(): MSImmutableLayerAncestry;
  unitCoordinateSpace(): any;
  rulerCoordinateSpace(): any;
  usedStyle(): MSStyle;
  transformStruct(): CHTransformStruct;
  setTransformStruct(transformStruct: CHTransformStruct): void;
}
declare const MSLayer: {
  alloc(): MSLayerUninitialized;
  class(): MSLayer;  alignLayers_withMode_toKey_pixelFit(layerArray: MSLayerArray, mode: MSLayerAlignmentMode, key: NSString | string, shouldPixelFit: boolean): void;
  userVisibleRotationForRotation(r: CGFloat): CGFloat;
  rotationForUserVisibleRotation(r: CGFloat): CGFloat;
  layerWithPath(path: MSPath): MSStyledLayer;
  makeLayerNamesUnique_withOptions(layers: NSArray<any> | any[], options: MSLayerRenameOptions): void;

}

